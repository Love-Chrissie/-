#!/usr/bin/env python  # encoding: utf-8  """ @version: v1.0 @author: 四月是你的谎言@contact: 389641222@qq.com @site:  @software: PyCharm @file: householder@time: 2018/10/19 8:26 PM """import timeimport numpy as npimport matplotlib.pyplot as pltdef householder(A, y):    col = np.shape(A)[1]    row = np.shape(A)[0]    u = np.zeros(row)    for i in range(col):        # 计算第i列模        aa = 0.0        for l in range(i, row):            aa += A[l, i]*A[l, i]        aa = np.sqrt(aa)        # 防止分母过小        if A[i, i] > 0.0 :            ki = -aa        else:            ki = aa        alpha = 1.0/(ki*(ki-A[i, i]))        u[i] = A[i, i] - ki        A[i, i] = ki        for l in range(i+1, row):            u[l] = A[l, i]            A[l, i] = 0.0        for j in range(i+1, col):            aa = 0.0            for l in range(i, row):                aa += u[l] * A[l, j]            aa = alpha * aa            for l in range(i, row):                A[l, j] -= aa * u[l]        aa = 0.0        for l in range(i, row):            aa += u[l] * y[l]        aa *= alpha        for l in range(i, row):            y[l] -= aa * u[l]    print("Matrix HA, and Hy:")    for i in range(row):        for j in range(col):            print("{:14.8f}".format(A[i, j]), end='')        print("  |{:14.8f}".format(y[i]))def main():    A = np.array([[0.0, 4.0, 1.0],                  [1.0, 1.0, 1.0],                  [0.0, 3.0, 2.0]])    y = np.array([5.0, 3.0, 5.0])    start = time.process_time()    householder(A, y)    end = time.process_time()    print("The program use %f ms" % ((end - start) * 1000))if __name__ == "__main__":    main()